---
apiVersion: v1
kind: Namespace
metadata:
  name: email-helper-prod
  labels:
    name: email-helper-prod
    environment: production

---
apiVersion: v1
kind: Secret
metadata:
  name: email-helper-secrets
  namespace: email-helper-prod
type: Opaque
stringData:
  # These should be set via kubectl or external secrets manager
  database-url: "postgresql://user:password@postgres-service:5432/email_helper"
  redis-url: "redis://redis-service:6379"
  azure-openai-endpoint: "https://your-resource.openai.azure.com/"
  azure-openai-key: "your-azure-openai-key"
  graph-client-id: "your-client-id"
  graph-client-secret: "your-client-secret"
  graph-tenant-id: "your-tenant-id"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-helper-api
  namespace: email-helper-prod
  labels:
    app: email-helper-api
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: email-helper-api
  template:
    metadata:
      labels:
        app: email-helper-api
        tier: backend
    spec:
      containers:
      - name: api
        image: ghcr.io/ameliarose802/email_helper:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: APP_NAME
          value: "Email Helper API"
        - name: DEBUG
          value: "false"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: redis-url
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: azure-openai-endpoint
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: azure-openai-key
        - name: GRAPH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: graph-client-id
        - name: GRAPH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: graph-client-secret
        - name: GRAPH_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: graph-tenant-id
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: runtime-data
          mountPath: /app/runtime_data
      volumes:
      - name: logs
        emptyDir: {}
      - name: runtime-data
        persistentVolumeClaim:
          claimName: email-helper-data-pvc
      imagePullSecrets:
      - name: ghcr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: email-helper-api-service
  namespace: email-helper-prod
  labels:
    app: email-helper-api
spec:
  type: ClusterIP
  selector:
    app: email-helper-api
  ports:
  - name: http
    protocol: TCP
    port: 8000
    targetPort: 8000
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-helper-worker
  namespace: email-helper-prod
  labels:
    app: email-helper-worker
    tier: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: email-helper-worker
  template:
    metadata:
      labels:
        app: email-helper-worker
        tier: worker
    spec:
      containers:
      - name: worker
        image: ghcr.io/ameliarose802/email_helper:IMAGE_TAG
        imagePullPolicy: Always
        command: ["celery"]
        args: ["-A", "backend.workers.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: redis-url
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: azure-openai-endpoint
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: email-helper-secrets
              key: azure-openai-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: runtime-data
          mountPath: /app/runtime_data
      volumes:
      - name: logs
        emptyDir: {}
      - name: runtime-data
        persistentVolumeClaim:
          claimName: email-helper-data-pvc
      imagePullSecrets:
      - name: ghcr-secret

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: email-helper-data-pvc
  namespace: email-helper-prod
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: email-helper-ingress
  namespace: email-helper-prod
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.emailhelper.com
    secretName: email-helper-tls-secret
  rules:
  - host: api.emailhelper.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: email-helper-api-service
            port:
              number: 8000

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: email-helper-api-hpa
  namespace: email-helper-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: email-helper-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
