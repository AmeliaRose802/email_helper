{
  "execution_plan": {
    "waves": [
      {
        "wave_number": 1,
        "tasks": [
          {
            "task_id": "T1.1",
            "summary": "Create COM Email Provider Adapter",
            "description": "Create FastAPI-compatible EmailProvider adapter that wraps the existing OutlookManager class. Maps COM operations to EmailProvider interface without duplicating existing functionality.",
            "size": "M",
            "expected_runtime_min": 30,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "backend/services/com_email_provider.py",
                "type": "exact"
              },
              {
                "pattern": "backend/services/email_provider.py",
                "type": "exact"
              }
            ],
            "depends_on": [],
            "conflicts_with": [],
            "status": "completed",
            "completed_at": "2025-10-14T22:31:30.790313+00:00",
            "pr_number": 74,
            "pr_url": "https://github.com/AmeliaRose802/email_helper/pull/74",
            "completion_type": "direct",
            "files_modified": [
              "backend/services/com_email_provider.py",
              "backend/services/email_provider.py",
              "backend/tests/test_com_email_provider.py"
            ]
          },
          {
            "task_id": "T1.2",
            "summary": "Create AI Service Adapter",
            "description": "Create FastAPI-compatible AI service adapter that wraps existing AIProcessor class. Reuses existing Azure OpenAI integration and prompty files.",
            "size": "M",
            "expected_runtime_min": 24,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "backend/services/com_ai_service.py",
                "type": "exact"
              },
              {
                "pattern": "src/azure_config.py",
                "type": "exact"
              },
              {
                "pattern": "prompts/.*\\\\.prompty$",
                "type": "regex"
              }
            ],
            "depends_on": [],
            "conflicts_with": [],
            "status": "completed",
            "completed_at": "2025-10-14T22:31:36.083292+00:00",
            "pr_number": 75,
            "pr_url": "https://github.com/AmeliaRose802/email_helper/pull/75",
            "completion_type": "direct",
            "files_modified": [
              "backend/services/com_ai_service.py",
              "backend/tests/test_com_ai_service.py"
            ]
          },
          {
            "task_id": "T2.4",
            "summary": "Create Configuration Templates",
            "description": "Generate example environment files for localhost with documented variables.",
            "size": "S",
            "expected_runtime_min": 6,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": ".env.localhost.example",
                "type": "exact"
              },
              {
                "pattern": "backend/.env.localhost.example",
                "type": "exact"
              },
              {
                "pattern": "frontend/.env.local.example",
                "type": "exact"
              }
            ],
            "depends_on": [],
            "conflicts_with": [],
            "status": "completed",
            "completed_at": "2025-10-14T22:59:02.201162+00:00",
            "pr_number": 76,
            "pr_url": "https://github.com/AmeliaRose802/email_helper/pull/76",
            "completion_type": "direct",
            "files_modified": [
              ".env.localhost.example",
              "backend/.env.localhost.example",
              "frontend/.env.local.example"
            ]
          }
        ],
        "parallel_task_count": 3,
        "estimated_wave_time_min": 30,
        "size_distribution": {
          "M": 2,
          "S": 1
        }
      },
      {
        "wave_number": 2,
        "tasks": [
          {
            "task_id": "T1.3",
            "summary": "Update API Dependencies",
            "description": "Wire COM and AI adapters into FastAPI dependency injection system. Update API endpoints to use new adapters.",
            "size": "M",
            "expected_runtime_min": 24,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "backend/core/config.py",
                "type": "exact"
              },
              {
                "pattern": "backend/api/emails.py",
                "type": "exact"
              },
              {
                "pattern": "backend/api/ai.py",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T1.1",
              "T1.2"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T1.5",
            "summary": "Create Test Infrastructure",
            "description": "Build unit and integration test suite for COM and AI service adapters with mocking and fixtures.",
            "size": "M",
            "expected_runtime_min": 24,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "backend/tests/test_com_email_provider.py",
                "type": "exact"
              },
              {
                "pattern": "backend/tests/test_com_ai_service.py",
                "type": "exact"
              },
              {
                "pattern": "backend/tests/integration/test_com_backend.py",
                "type": "exact"
              },
              {
                "pattern": "backend/tests/conftest.py",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T1.1",
              "T1.2"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 2,
        "estimated_wave_time_min": 24,
        "size_distribution": {
          "M": 2
        }
      },
      {
        "wave_number": 3,
        "tasks": [
          {
            "task_id": "T2.1",
            "summary": "Configure Frontend for Localhost",
            "description": "Add localhost configuration to frontend with environment variables and API endpoint configuration.",
            "size": "S",
            "expected_runtime_min": 12,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "frontend/.env.local",
                "type": "exact"
              },
              {
                "pattern": "frontend/vite.config.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/src/config/api.ts",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T1.3"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T3.2",
            "summary": "Create Backend Integration Tests",
            "description": "Build integration test suite for COM Outlook operations, AI processing, and full workflow.",
            "size": "M",
            "expected_runtime_min": 24,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "backend/tests/integration/test_com_outlook_integration.py",
                "type": "exact"
              },
              {
                "pattern": "backend/tests/integration/test_ai_processing_integration.py",
                "type": "exact"
              },
              {
                "pattern": "backend/tests/integration/test_full_workflow_integration.py",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T1.5"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T4.2",
            "summary": "Update Architecture Documentation",
            "description": "Document COM provider architecture, component diagrams, and adapter pattern implementation.",
            "size": "S",
            "expected_runtime_min": 12,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "docs/ARCHITECTURE.md",
                "type": "exact"
              },
              {
                "pattern": "docs/DESIGN_DECISIONS.md",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T1.1",
              "T1.2",
              "T1.3"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 3,
        "estimated_wave_time_min": 24,
        "size_distribution": {
          "S": 2,
          "M": 1
        }
      },
      {
        "wave_number": 4,
        "tasks": [
          {
            "task_id": "T2.2",
            "summary": "Verify API Integration",
            "description": "Manual testing of all API endpoints with COM backend, ensuring feature parity with Tkinter application.",
            "size": "S",
            "expected_runtime_min": 12,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "frontend/src/services/emailApi.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/src/services/aiApi.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/src/services/taskApi.ts",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T1.3",
              "T2.1"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 1,
        "estimated_wave_time_min": 12,
        "size_distribution": {
          "S": 1
        }
      },
      {
        "wave_number": 5,
        "tasks": [
          {
            "task_id": "T2.3",
            "summary": "Update Setup Documentation",
            "description": "Create setup documentation with step-by-step instructions and troubleshooting.",
            "size": "S",
            "expected_runtime_min": 12,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "frontend/README.md",
                "type": "exact"
              },
              {
                "pattern": "backend/README.md",
                "type": "exact"
              },
              {
                "pattern": "README.md",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T2.1",
              "T2.2"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T3.1",
            "summary": "Create E2E Test Suite",
            "description": "Implement end-to-end tests covering email processing, editing, summarization, and task management.",
            "size": "L",
            "expected_runtime_min": 48,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "frontend/tests/e2e/fixtures/test-setup.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/tests/e2e/email-processing.spec.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/tests/e2e/email-editing.spec.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/tests/e2e/summary-generation.spec.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/tests/e2e/task-management.spec.ts",
                "type": "exact"
              },
              {
                "pattern": "frontend/playwright.config.ts",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T2.2"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T4.4",
            "summary": "Create Deployment Scripts",
            "description": "Build one-click startup/shutdown scripts for Windows with prerequisite checking.",
            "size": "S",
            "expected_runtime_min": 6,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "scripts/start-localhost.bat",
                "type": "exact"
              },
              {
                "pattern": "scripts/stop-all.bat",
                "type": "exact"
              },
              {
                "pattern": "scripts/check-prerequisites.ps1",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T2.2"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 3,
        "estimated_wave_time_min": 48,
        "size_distribution": {
          "S": 2,
          "L": 1
        }
      },
      {
        "wave_number": 6,
        "tasks": [
          {
            "task_id": "T3.3",
            "summary": "Update CI/CD Pipeline",
            "description": "Update existing GitHub Actions workflows to include COM backend and frontend integration tests.",
            "size": "S",
            "expected_runtime_min": 12,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": ".github/workflows/merge-validation.yml",
                "type": "exact"
              },
              {
                "pattern": ".github/workflows/quick-check.yml",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T3.1",
              "T3.2"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T4.1",
            "summary": "Create User Documentation",
            "description": "Write user guides for localhost setup and troubleshooting.",
            "size": "S",
            "expected_runtime_min": 12,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "docs/LOCALHOST_SETUP.md",
                "type": "exact"
              },
              {
                "pattern": "docs/TROUBLESHOOTING.md",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T3.1",
              "T3.2"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 2,
        "estimated_wave_time_min": 12,
        "size_distribution": {
          "S": 2
        }
      },
      {
        "wave_number": 7,
        "tasks": [
          {
            "task_id": "T4.3",
            "summary": "Create Migration Guide",
            "description": "Document migration from Tkinter to Web UI with feature comparison and data migration.",
            "size": "S",
            "expected_runtime_min": 6,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "docs/TKINTER_TO_WEB_MIGRATION.md",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T2.2",
              "T4.1"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 1,
        "estimated_wave_time_min": 6,
        "size_distribution": {
          "S": 1
        }
      },
      {
        "wave_number": 8,
        "tasks": [
          {
            "task_id": "T5.1",
            "summary": "Create GitHub Issues for Technical Debt",
            "description": "Document and track technical debt items including Graph API integration and future enhancements.",
            "size": "S",
            "expected_runtime_min": 6,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": ".github/issues/.*\\\\.md$",
                "type": "regex"
              }
            ],
            "depends_on": [
              "T4.1",
              "T4.2",
              "T4.3"
            ],
            "conflicts_with": []
          },
          {
            "task_id": "T5.4",
            "summary": "User Acceptance Testing",
            "description": "Conduct UAT, collect feedback, document issues, and prioritize fixes.",
            "size": "M",
            "expected_runtime_min": 24,
            "tags": [],
            "enabler": false,
            "files": [
              {
                "pattern": "docs/UAT_PLAN.md",
                "type": "exact"
              },
              {
                "pattern": "docs/UAT_RESULTS.md",
                "type": "exact"
              },
              {
                "pattern": "docs/UAT_FEEDBACK.md",
                "type": "exact"
              }
            ],
            "depends_on": [
              "T4.1",
              "T4.2",
              "T4.3"
            ],
            "conflicts_with": []
          }
        ],
        "parallel_task_count": 2,
        "estimated_wave_time_min": 24,
        "size_distribution": {
          "S": 1,
          "M": 1
        }
      }
    ],
    "summary": {
      "total_waves": 8,
      "total_tasks": 17,
      "estimated_total_time_min": 180,
      "average_parallelism": 2.12,
      "max_parallelism": 3,
      "efficiency_metrics": {
        "sequential_time_min": 294,
        "parallel_time_min": 180,
        "time_savings_percent": 38.8
      }
    }
  }
}