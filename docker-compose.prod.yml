# Docker Compose override for production deployment
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  # Production backend configuration
  backend:
    restart: always
    environment:
      DEBUG: "false"
      # Use PostgreSQL in production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Production frontend configuration
  frontend:
    restart: always
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # Enable PostgreSQL for production
  database:
    restart: always
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Backup configuration
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups

  # Production Redis configuration
  redis:
    restart: always
    # Enable persistence
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Production worker configuration
  worker:
    restart: always
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
